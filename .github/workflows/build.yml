name: Build + Publish

on:
  push:
    tags:
      - 'v*'

env:
  BASE_DEV_VERSION: 2.5.0

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set Build Variables
      run: |
        echo "Using TAG mode: $GITHUB_REF_NAME"
        echo "REL_VERSION=$GITHUB_REF_NAME" >> $GITHUB_ENV
        echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV

    - name: Disable DEV Flag + Set Version
      run: |
        sudo apt-get install jq -y
        mv package.json pkg-temp.json
        jq --arg vs "$REL_VERSION_STRICT" -r '. + {dev:false, version:$vs}' pkg-temp.json > package.json
        rm pkg-temp.json
        cat package.json

    - name: Build Docker image
      run: |
        docker build -t wiki:$REL_VERSION_STRICT -f dev/build/Dockerfile .

    - name: Extract compiled files
      run: |
        mkdir -p _dist
        docker create --name wiki wiki:$REL_VERSION_STRICT
        docker cp wiki:/wiki _dist
        docker rm wiki
        rm _dist/wiki/config.yml
        cp ./config.sample.yml _dist/wiki/config.sample.yml
        find _dist/wiki/ -printf "%P\n" | tar -czf wiki-js.tar.gz --no-recursion -C _dist/wiki/ -T -

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: drop
        path: wiki-js.tar.gz

  cypress:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    needs: [build]

    strategy:
      matrix:
        dbtype: [postgres, mysql, mariadb, sqlite]

    steps:
    - uses: actions/checkout@v4

    - name: Set Test Variables
      run: |
        echo "Using TAG mode: $GITHUB_REF_NAME"
        echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV

    - name: Run Tests
      env:
        MATRIXENV: ${{ matrix.dbtype }}
        CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
      run: |
        chmod u+x dev/cypress/ci-setup.sh
        dev/cypress/ci-setup.sh
        docker run --name cypress --ipc=host --shm-size 1G -v $GITHUB_WORKSPACE:/e2e -w /e2e cypress/included:4.9.0 --record --key "$CYPRESS_KEY" --headless --group "$MATRIXENV" --ci-build-id "$REL_VERSION_STRICT-run$GITHUB_RUN_NUMBER.$GITHUB_RUN_ATTEMPT" --tag "$REL_VERSION_STRICT" --config baseUrl=http://172.17.0.1:3000

  arm:
    name: ARM Build
    runs-on: ubuntu-latest
    needs: [cypress]
    permissions:
      packages: write

    strategy:
      matrix:
        include:
          - platform: linux/arm64
            docker: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set Version Variables
      run: |
        echo "Using TAG mode: $GITHUB_REF_NAME"
        echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: dev/build-arm/Dockerfile
        platforms: ${{ matrix.platform }}
        provenance: false
        push: true
        tags: |
          requarks/wiki:canary-${{ matrix.docker }}-${{ env.REL_VERSION_STRICT }}
          ghcr.io/requarks/wiki:canary-${{ matrix.docker }}-${{ env.REL_VERSION_STRICT }}

  windows:
    name: Windows Build
    runs-on: windows-latest
    needs: [cypress]

    steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Download a Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: drop
        path: drop

    - name: Extract Build
      run: |
        mkdir -p win
        tar -xzf $env:GITHUB_WORKSPACE\drop\wiki-js.tar.gz -C $env:GITHUB_WORKSPACE\win
        Copy-Item win\node_modules\extract-files\package.json patch-extractfile.json -Force
        Remove-Item -Path win\node_modules -Force -Recurse

    - name: Install Dependencies
      run: |
        yarn --production --frozen-lockfile --non-interactive
        yarn patch-package
      working-directory: win

    - name: Fix patched packages
      run: |
        Copy-Item patch-extractfile.json win\node_modules\extract-files\package.json -Force

    - name: Create Bundle
      run: tar -czf wiki-js-windows.tar.gz -C $env:GITHUB_WORKSPACE\win .

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: drop-win
        path: wiki-js-windows.tar.gz
